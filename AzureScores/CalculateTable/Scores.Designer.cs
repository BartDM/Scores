//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Game_Division", "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Divisions), "games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.games), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Tables_Divisions", "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Divisions), "Tables", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.Tables), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_TeamSeasonDivision_Division", "Divisions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Divisions), "TeamSeasonDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.TeamSeasonDivision), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Game_Season", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Seasons), "games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.games), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Game_Team1", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Teams), "games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.games), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Game_Team2", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Teams), "games", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.games), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_Tables_Seasons", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Seasons), "Tables", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.Tables), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_TeamSeasonDivision_Season", "Seasons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Seasons), "TeamSeasonDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.TeamSeasonDivision), true)]
[assembly: EdmRelationshipAttribute("ScoresModel", "FK_TeamSeasonDivision_Team", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CalculateTable.Teams), "TeamSeasonDivision", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CalculateTable.TeamSeasonDivision), true)]

#endregion

namespace CalculateTable
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScoresEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScoresEntities object using the connection string found in the 'ScoresEntities' section of the application configuration file.
        /// </summary>
        public ScoresEntities() : base("name=ScoresEntities", "ScoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScoresEntities object.
        /// </summary>
        public ScoresEntities(string connectionString) : base(connectionString, "ScoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScoresEntities object.
        /// </summary>
        public ScoresEntities(EntityConnection connection) : base(connection, "ScoresEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Divisions> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Divisions>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Divisions> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<games> games
        {
            get
            {
                if ((_games == null))
                {
                    _games = base.CreateObjectSet<games>("games");
                }
                return _games;
            }
        }
        private ObjectSet<games> _games;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Seasons> Seasons
        {
            get
            {
                if ((_Seasons == null))
                {
                    _Seasons = base.CreateObjectSet<Seasons>("Seasons");
                }
                return _Seasons;
            }
        }
        private ObjectSet<Seasons> _Seasons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TableLines> TableLines
        {
            get
            {
                if ((_TableLines == null))
                {
                    _TableLines = base.CreateObjectSet<TableLines>("TableLines");
                }
                return _TableLines;
            }
        }
        private ObjectSet<TableLines> _TableLines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tables> Tables
        {
            get
            {
                if ((_Tables == null))
                {
                    _Tables = base.CreateObjectSet<Tables>("Tables");
                }
                return _Tables;
            }
        }
        private ObjectSet<Tables> _Tables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teams> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Teams>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Teams> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TeamSeasonDivision> TeamSeasonDivision
        {
            get
            {
                if ((_TeamSeasonDivision == null))
                {
                    _TeamSeasonDivision = base.CreateObjectSet<TeamSeasonDivision>("TeamSeasonDivision");
                }
                return _TeamSeasonDivision;
            }
        }
        private ObjectSet<TeamSeasonDivision> _TeamSeasonDivision;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Divisions divisions)
        {
            base.AddObject("Divisions", divisions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the games EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogames(games games)
        {
            base.AddObject("games", games);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Seasons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeasons(Seasons seasons)
        {
            base.AddObject("Seasons", seasons);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableLines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableLines(TableLines tableLines)
        {
            base.AddObject("TableLines", tableLines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTables(Tables tables)
        {
            base.AddObject("Tables", tables);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Teams teams)
        {
            base.AddObject("Teams", teams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TeamSeasonDivision EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeamSeasonDivision(TeamSeasonDivision teamSeasonDivision)
        {
            base.AddObject("TeamSeasonDivision", teamSeasonDivision);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="Divisions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Divisions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Divisions object.
        /// </summary>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Divisions CreateDivisions(global::System.Int64 divisionId, global::System.String description)
        {
            Divisions divisions = new Divisions();
            divisions.DivisionId = divisionId;
            divisions.Description = description;
            return divisions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                if (_DivisionId != value)
                {
                    OnDivisionIdChanging(value);
                    ReportPropertyChanging("DivisionId");
                    _DivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionId");
                    OnDivisionIdChanged();
                }
            }
        }
        private global::System.Int64 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int64 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Division", "games")]
        public EntityCollection<games> games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<games>("ScoresModel.FK_Game_Division", "games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<games>("ScoresModel.FK_Game_Division", "games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Tables_Divisions", "Tables")]
        public EntityCollection<Tables> Tables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tables>("ScoresModel.FK_Tables_Divisions", "Tables");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tables>("ScoresModel.FK_Tables_Divisions", "Tables", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Division", "TeamSeasonDivision")]
        public EntityCollection<TeamSeasonDivision> TeamSeasonDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Division", "TeamSeasonDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Division", "TeamSeasonDivision", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="games")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class games : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new games object.
        /// </summary>
        /// <param name="gameId">Initial value of the GameId property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="divisionid">Initial value of the Divisionid property.</param>
        /// <param name="team1Id">Initial value of the Team1Id property.</param>
        /// <param name="team2Id">Initial value of the Team2Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static games Creategames(global::System.Int64 gameId, global::System.Int64 seasonId, global::System.Int64 divisionid, global::System.Int64 team1Id, global::System.Int64 team2Id, global::System.DateTime date)
        {
            games games = new games();
            games.GameId = gameId;
            games.SeasonId = seasonId;
            games.Divisionid = divisionid;
            games.Team1Id = team1Id;
            games.Team2Id = team2Id;
            games.Date = date;
            return games;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GameId
        {
            get
            {
                return _GameId;
            }
            set
            {
                if (_GameId != value)
                {
                    OnGameIdChanging(value);
                    ReportPropertyChanging("GameId");
                    _GameId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GameId");
                    OnGameIdChanged();
                }
            }
        }
        private global::System.Int64 _GameId;
        partial void OnGameIdChanging(global::System.Int64 value);
        partial void OnGameIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Divisionid
        {
            get
            {
                return _Divisionid;
            }
            set
            {
                OnDivisionidChanging(value);
                ReportPropertyChanging("Divisionid");
                _Divisionid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Divisionid");
                OnDivisionidChanged();
            }
        }
        private global::System.Int64 _Divisionid;
        partial void OnDivisionidChanging(global::System.Int64 value);
        partial void OnDivisionidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GameNumber
        {
            get
            {
                return _GameNumber;
            }
            set
            {
                OnGameNumberChanging(value);
                ReportPropertyChanging("GameNumber");
                _GameNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GameNumber");
                OnGameNumberChanged();
            }
        }
        private global::System.String _GameNumber;
        partial void OnGameNumberChanging(global::System.String value);
        partial void OnGameNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Team1Id
        {
            get
            {
                return _Team1Id;
            }
            set
            {
                OnTeam1IdChanging(value);
                ReportPropertyChanging("Team1Id");
                _Team1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1Id");
                OnTeam1IdChanged();
            }
        }
        private global::System.Int64 _Team1Id;
        partial void OnTeam1IdChanging(global::System.Int64 value);
        partial void OnTeam1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Team1Score
        {
            get
            {
                return _Team1Score;
            }
            set
            {
                OnTeam1ScoreChanging(value);
                ReportPropertyChanging("Team1Score");
                _Team1Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1Score");
                OnTeam1ScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Team1Score;
        partial void OnTeam1ScoreChanging(Nullable<global::System.Int32> value);
        partial void OnTeam1ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Team1Tries
        {
            get
            {
                return _Team1Tries;
            }
            set
            {
                OnTeam1TriesChanging(value);
                ReportPropertyChanging("Team1Tries");
                _Team1Tries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team1Tries");
                OnTeam1TriesChanged();
            }
        }
        private Nullable<global::System.Int32> _Team1Tries;
        partial void OnTeam1TriesChanging(Nullable<global::System.Int32> value);
        partial void OnTeam1TriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Team2Id
        {
            get
            {
                return _Team2Id;
            }
            set
            {
                OnTeam2IdChanging(value);
                ReportPropertyChanging("Team2Id");
                _Team2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2Id");
                OnTeam2IdChanged();
            }
        }
        private global::System.Int64 _Team2Id;
        partial void OnTeam2IdChanging(global::System.Int64 value);
        partial void OnTeam2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Team2Score
        {
            get
            {
                return _Team2Score;
            }
            set
            {
                OnTeam2ScoreChanging(value);
                ReportPropertyChanging("Team2Score");
                _Team2Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2Score");
                OnTeam2ScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _Team2Score;
        partial void OnTeam2ScoreChanging(Nullable<global::System.Int32> value);
        partial void OnTeam2ScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Team2Tries
        {
            get
            {
                return _Team2Tries;
            }
            set
            {
                OnTeam2TriesChanging(value);
                ReportPropertyChanging("Team2Tries");
                _Team2Tries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Team2Tries");
                OnTeam2TriesChanged();
            }
        }
        private Nullable<global::System.Int32> _Team2Tries;
        partial void OnTeam2TriesChanging(Nullable<global::System.Int32> value);
        partial void OnTeam2TriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Division", "Divisions")]
        public Divisions Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Game_Division", "Divisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Game_Division", "Divisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Divisions> DivisionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Game_Division", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Divisions>("ScoresModel.FK_Game_Division", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Season", "Seasons")]
        public Seasons Seasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Game_Season", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Game_Season", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Seasons> SeasonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Game_Season", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Seasons>("ScoresModel.FK_Game_Season", "Seasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Team1", "Teams")]
        public Teams Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team1", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team1", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> TeamsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team1", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("ScoresModel.FK_Game_Team1", "Teams", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Team2", "Teams")]
        public Teams Teams1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team2", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team2", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> Teams1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_Game_Team2", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("ScoresModel.FK_Game_Team2", "Teams", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="Seasons")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Seasons : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Seasons object.
        /// </summary>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="startYear">Initial value of the StartYear property.</param>
        /// <param name="endYear">Initial value of the EndYear property.</param>
        public static Seasons CreateSeasons(global::System.Int64 seasonId, global::System.String description, global::System.Int32 startYear, global::System.Int32 endYear)
        {
            Seasons seasons = new Seasons();
            seasons.SeasonId = seasonId;
            seasons.Description = description;
            seasons.StartYear = startYear;
            seasons.EndYear = endYear;
            return seasons;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                if (_SeasonId != value)
                {
                    OnSeasonIdChanging(value);
                    ReportPropertyChanging("SeasonId");
                    _SeasonId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeasonId");
                    OnSeasonIdChanged();
                }
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartYear
        {
            get
            {
                return _StartYear;
            }
            set
            {
                OnStartYearChanging(value);
                ReportPropertyChanging("StartYear");
                _StartYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartYear");
                OnStartYearChanged();
            }
        }
        private global::System.Int32 _StartYear;
        partial void OnStartYearChanging(global::System.Int32 value);
        partial void OnStartYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EndYear
        {
            get
            {
                return _EndYear;
            }
            set
            {
                OnEndYearChanging(value);
                ReportPropertyChanging("EndYear");
                _EndYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndYear");
                OnEndYearChanged();
            }
        }
        private global::System.Int32 _EndYear;
        partial void OnEndYearChanging(global::System.Int32 value);
        partial void OnEndYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Season", "games")]
        public EntityCollection<games> games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<games>("ScoresModel.FK_Game_Season", "games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<games>("ScoresModel.FK_Game_Season", "games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Tables_Seasons", "Tables")]
        public EntityCollection<Tables> Tables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tables>("ScoresModel.FK_Tables_Seasons", "Tables");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tables>("ScoresModel.FK_Tables_Seasons", "Tables", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Season", "TeamSeasonDivision")]
        public EntityCollection<TeamSeasonDivision> TeamSeasonDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Season", "TeamSeasonDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Season", "TeamSeasonDivision", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="TableLines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TableLines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TableLines object.
        /// </summary>
        /// <param name="tableLineId">Initial value of the TableLineId property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="points">Initial value of the Points property.</param>
        /// <param name="bonus">Initial value of the Bonus property.</param>
        /// <param name="totalPoints">Initial value of the TotalPoints property.</param>
        /// <param name="games">Initial value of the Games property.</param>
        /// <param name="won">Initial value of the Won property.</param>
        /// <param name="draw">Initial value of the Draw property.</param>
        /// <param name="lost">Initial value of the Lost property.</param>
        /// <param name="forfait">Initial value of the Forfait property.</param>
        /// <param name="positivePoints">Initial value of the PositivePoints property.</param>
        /// <param name="negativePoints">Initial value of the NegativePoints property.</param>
        /// <param name="redCards">Initial value of the RedCards property.</param>
        public static TableLines CreateTableLines(global::System.Int64 tableLineId, global::System.Int64 tableId, global::System.Int64 teamId, global::System.Int32 points, global::System.Int32 bonus, global::System.Int32 totalPoints, global::System.Int32 games, global::System.Int32 won, global::System.Int32 draw, global::System.Int32 lost, global::System.Int32 forfait, global::System.Int32 positivePoints, global::System.Int32 negativePoints, global::System.Int32 redCards)
        {
            TableLines tableLines = new TableLines();
            tableLines.TableLineId = tableLineId;
            tableLines.TableId = tableId;
            tableLines.TeamId = teamId;
            tableLines.Points = points;
            tableLines.Bonus = bonus;
            tableLines.TotalPoints = totalPoints;
            tableLines.Games = games;
            tableLines.Won = won;
            tableLines.Draw = draw;
            tableLines.Lost = lost;
            tableLines.Forfait = forfait;
            tableLines.PositivePoints = positivePoints;
            tableLines.NegativePoints = negativePoints;
            tableLines.RedCards = redCards;
            return tableLines;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TableLineId
        {
            get
            {
                return _TableLineId;
            }
            set
            {
                if (_TableLineId != value)
                {
                    OnTableLineIdChanging(value);
                    ReportPropertyChanging("TableLineId");
                    _TableLineId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TableLineId");
                    OnTableLineIdChanged();
                }
            }
        }
        private global::System.Int64 _TableLineId;
        partial void OnTableLineIdChanging(global::System.Int64 value);
        partial void OnTableLineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int64 _TableId;
        partial void OnTableIdChanging(global::System.Int64 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Points
        {
            get
            {
                return _Points;
            }
            set
            {
                OnPointsChanging(value);
                ReportPropertyChanging("Points");
                _Points = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Points");
                OnPointsChanged();
            }
        }
        private global::System.Int32 _Points;
        partial void OnPointsChanging(global::System.Int32 value);
        partial void OnPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Bonus
        {
            get
            {
                return _Bonus;
            }
            set
            {
                OnBonusChanging(value);
                ReportPropertyChanging("Bonus");
                _Bonus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bonus");
                OnBonusChanged();
            }
        }
        private global::System.Int32 _Bonus;
        partial void OnBonusChanging(global::System.Int32 value);
        partial void OnBonusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalPoints
        {
            get
            {
                return _TotalPoints;
            }
            set
            {
                OnTotalPointsChanging(value);
                ReportPropertyChanging("TotalPoints");
                _TotalPoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalPoints");
                OnTotalPointsChanged();
            }
        }
        private global::System.Int32 _TotalPoints;
        partial void OnTotalPointsChanging(global::System.Int32 value);
        partial void OnTotalPointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Games
        {
            get
            {
                return _Games;
            }
            set
            {
                OnGamesChanging(value);
                ReportPropertyChanging("Games");
                _Games = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Games");
                OnGamesChanged();
            }
        }
        private global::System.Int32 _Games;
        partial void OnGamesChanging(global::System.Int32 value);
        partial void OnGamesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Won
        {
            get
            {
                return _Won;
            }
            set
            {
                OnWonChanging(value);
                ReportPropertyChanging("Won");
                _Won = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Won");
                OnWonChanged();
            }
        }
        private global::System.Int32 _Won;
        partial void OnWonChanging(global::System.Int32 value);
        partial void OnWonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Draw
        {
            get
            {
                return _Draw;
            }
            set
            {
                OnDrawChanging(value);
                ReportPropertyChanging("Draw");
                _Draw = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Draw");
                OnDrawChanged();
            }
        }
        private global::System.Int32 _Draw;
        partial void OnDrawChanging(global::System.Int32 value);
        partial void OnDrawChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lost
        {
            get
            {
                return _Lost;
            }
            set
            {
                OnLostChanging(value);
                ReportPropertyChanging("Lost");
                _Lost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lost");
                OnLostChanged();
            }
        }
        private global::System.Int32 _Lost;
        partial void OnLostChanging(global::System.Int32 value);
        partial void OnLostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Forfait
        {
            get
            {
                return _Forfait;
            }
            set
            {
                OnForfaitChanging(value);
                ReportPropertyChanging("Forfait");
                _Forfait = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Forfait");
                OnForfaitChanged();
            }
        }
        private global::System.Int32 _Forfait;
        partial void OnForfaitChanging(global::System.Int32 value);
        partial void OnForfaitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositivePoints
        {
            get
            {
                return _PositivePoints;
            }
            set
            {
                OnPositivePointsChanging(value);
                ReportPropertyChanging("PositivePoints");
                _PositivePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositivePoints");
                OnPositivePointsChanged();
            }
        }
        private global::System.Int32 _PositivePoints;
        partial void OnPositivePointsChanging(global::System.Int32 value);
        partial void OnPositivePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NegativePoints
        {
            get
            {
                return _NegativePoints;
            }
            set
            {
                OnNegativePointsChanging(value);
                ReportPropertyChanging("NegativePoints");
                _NegativePoints = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegativePoints");
                OnNegativePointsChanged();
            }
        }
        private global::System.Int32 _NegativePoints;
        partial void OnNegativePointsChanging(global::System.Int32 value);
        partial void OnNegativePointsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RedCards
        {
            get
            {
                return _RedCards;
            }
            set
            {
                OnRedCardsChanging(value);
                ReportPropertyChanging("RedCards");
                _RedCards = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RedCards");
                OnRedCardsChanged();
            }
        }
        private global::System.Int32 _RedCards;
        partial void OnRedCardsChanging(global::System.Int32 value);
        partial void OnRedCardsChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="Tables")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tables : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tables object.
        /// </summary>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="selfCalculated">Initial value of the SelfCalculated property.</param>
        public static Tables CreateTables(global::System.Int64 tableId, global::System.DateTime createdOn, global::System.Int64 divisionId, global::System.Int64 seasonId, global::System.Boolean selfCalculated)
        {
            Tables tables = new Tables();
            tables.TableId = tableId;
            tables.CreatedOn = createdOn;
            tables.DivisionId = divisionId;
            tables.SeasonId = seasonId;
            tables.SelfCalculated = selfCalculated;
            return tables;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                if (_TableId != value)
                {
                    OnTableIdChanging(value);
                    ReportPropertyChanging("TableId");
                    _TableId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TableId");
                    OnTableIdChanged();
                }
            }
        }
        private global::System.Int64 _TableId;
        partial void OnTableIdChanging(global::System.Int64 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int64 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int64 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SelfCalculated
        {
            get
            {
                return _SelfCalculated;
            }
            set
            {
                OnSelfCalculatedChanging(value);
                ReportPropertyChanging("SelfCalculated");
                _SelfCalculated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SelfCalculated");
                OnSelfCalculatedChanged();
            }
        }
        private global::System.Boolean _SelfCalculated;
        partial void OnSelfCalculatedChanging(global::System.Boolean value);
        partial void OnSelfCalculatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Tables_Divisions", "Divisions")]
        public Divisions Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Tables_Divisions", "Divisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Tables_Divisions", "Divisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Divisions> DivisionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_Tables_Divisions", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Divisions>("ScoresModel.FK_Tables_Divisions", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Tables_Seasons", "Seasons")]
        public Seasons Seasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Tables_Seasons", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Tables_Seasons", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Seasons> SeasonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_Tables_Seasons", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Seasons>("ScoresModel.FK_Tables_Seasons", "Seasons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="Teams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teams object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="team">Initial value of the Team property.</param>
        public static Teams CreateTeams(global::System.Int64 teamId, global::System.String team)
        {
            Teams teams = new Teams();
            teams.TeamId = teamId;
            teams.Team = team;
            return teams;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                if (_TeamId != value)
                {
                    OnTeamIdChanging(value);
                    ReportPropertyChanging("TeamId");
                    _TeamId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TeamId");
                    OnTeamIdChanged();
                }
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Team
        {
            get
            {
                return _Team;
            }
            set
            {
                OnTeamChanging(value);
                ReportPropertyChanging("Team");
                _Team = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Team");
                OnTeamChanged();
            }
        }
        private global::System.String _Team;
        partial void OnTeamChanging(global::System.String value);
        partial void OnTeamChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Team1", "games")]
        public EntityCollection<games> games
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<games>("ScoresModel.FK_Game_Team1", "games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<games>("ScoresModel.FK_Game_Team1", "games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_Game_Team2", "games")]
        public EntityCollection<games> games1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<games>("ScoresModel.FK_Game_Team2", "games");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<games>("ScoresModel.FK_Game_Team2", "games", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Team", "TeamSeasonDivision")]
        public EntityCollection<TeamSeasonDivision> TeamSeasonDivision
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Team", "TeamSeasonDivision");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TeamSeasonDivision>("ScoresModel.FK_TeamSeasonDivision_Team", "TeamSeasonDivision", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScoresModel", Name="TeamSeasonDivision")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TeamSeasonDivision : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TeamSeasonDivision object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="seasonId">Initial value of the SeasonId property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static TeamSeasonDivision CreateTeamSeasonDivision(global::System.Int64 teamId, global::System.Int64 divisionId, global::System.Int64 seasonId, global::System.Int64 id)
        {
            TeamSeasonDivision teamSeasonDivision = new TeamSeasonDivision();
            teamSeasonDivision.TeamId = teamId;
            teamSeasonDivision.DivisionId = divisionId;
            teamSeasonDivision.SeasonId = seasonId;
            teamSeasonDivision.Id = id;
            return teamSeasonDivision;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int64 _TeamId;
        partial void OnTeamIdChanging(global::System.Int64 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int64 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int64 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SeasonId
        {
            get
            {
                return _SeasonId;
            }
            set
            {
                OnSeasonIdChanging(value);
                ReportPropertyChanging("SeasonId");
                _SeasonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeasonId");
                OnSeasonIdChanged();
            }
        }
        private global::System.Int64 _SeasonId;
        partial void OnSeasonIdChanging(global::System.Int64 value);
        partial void OnSeasonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Division", "Divisions")]
        public Divisions Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_TeamSeasonDivision_Division", "Divisions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_TeamSeasonDivision_Division", "Divisions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Divisions> DivisionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Divisions>("ScoresModel.FK_TeamSeasonDivision_Division", "Divisions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Divisions>("ScoresModel.FK_TeamSeasonDivision_Division", "Divisions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Season", "Seasons")]
        public Seasons Seasons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_TeamSeasonDivision_Season", "Seasons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_TeamSeasonDivision_Season", "Seasons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Seasons> SeasonsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Seasons>("ScoresModel.FK_TeamSeasonDivision_Season", "Seasons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Seasons>("ScoresModel.FK_TeamSeasonDivision_Season", "Seasons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScoresModel", "FK_TeamSeasonDivision_Team", "Teams")]
        public Teams Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_TeamSeasonDivision_Team", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_TeamSeasonDivision_Team", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> TeamsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("ScoresModel.FK_TeamSeasonDivision_Team", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("ScoresModel.FK_TeamSeasonDivision_Team", "Teams", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
